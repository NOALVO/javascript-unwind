{"version":3,"sources":["../index.js"],"names":["unwind","array","path","length","indexOf","unwindDeep","unwindShallow","prop","reduce","acc","curr","map","Object","assign","x","shifted","split","shift","nextLevel","join","result","freeGlobal","global","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","define","amd","call"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\n;(function () {\n  function unwind(array, path) {\n    if (!array.length) {\n      array = [array];\n    }\n    if (path.indexOf('.') !== -1) {\n      return unwindDeep(array, path);\n    }\n    return unwindShallow(array, path);\n  }\n\n  function unwindShallow(array, prop) {\n    return array\n      .reduce((acc, curr) => [...acc, ...curr[prop]\n        .map(x => Object\n          .assign({}, curr, { [prop]: x }),\n        )],\n      []);\n  }\n\n  function unwindDeep(array, path) {\n    const shifted = path.split('.');\n    const prop = shifted.shift();\n    const nextLevel = shifted.join('.');\n    const result = array\n      .reduce((acc, curr) => [...acc, ...curr[prop]\n        .map(x => Object\n          .assign({}, curr, { [prop]: unwind(x, nextLevel) }),\n        )],\n      []);\n    return unwind(result, prop);\n  }\n\n\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n  \n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.unwind = unwind;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return unwind;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = unwind).unwind = unwind;\n    // Export for CommonJS support.\n    freeExports.unwind = unwind;\n  }\n  else {\n    // Export to the global object.\n    root.unwind = unwind;\n  }\n\n  return unwind;\n\n}.call(this));\n"]}